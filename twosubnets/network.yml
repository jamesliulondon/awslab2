Description:
  Just a VPC with a public and private subnetl.

Parameters:
  EnvironmentName:
    Description: it's a label for the environment
    Type: String

  VpcCidr:
    Type: String
    Default: 10.10.0.0/16

  PublicCidr:
    Type: String
    Default: 10.10.10.0/24

  PrivateCidr:
    Type: String
    Default: 10.10.11.0/24

Resources:
#  VPC
  Vpc:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

#  Gateway settings
  Igw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  VPCGatewayAttachment1:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref Igw
      VpcId: !Ref Vpc

#  Subnets
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PublicCidr
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref Vpc
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Ref PrivateCidr
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

#  NetGateway
  NatEip:
    Type: AWS::EC2::EIP
    DependsOn: VPCGatewayAttachment1
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatEip.AllocationId
      SubnetId: !Ref PublicSubnet

#  Routing
  PublicRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: VPCGatewayAttachment1
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref Igw
      RouteTableId: !Ref PublicRT

  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRT
      SubnetId: !Ref PublicSubnet

  PrivateRT:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref Vpc
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway
      RouteTableId: !Ref PrivateRT

  PrivateSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRT
      SubnetId: !Ref PrivateSubnet

#  Security Groups
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: String
      GroupName: String
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
      VpcId: !Ref Vpc

